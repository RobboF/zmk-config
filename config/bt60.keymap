
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define ADV   	1
#define FN   	2

/ {
    macros {
        move_desktop_left: move_desktop_left {            
            label = "move_desktop_left";            
            compatible = "zmk,behavior-macro";            
            #binding-cells = <0>;            
            bindings                
            = <&macro_press &kp LCTRL &kp LALT>                
            , <&macro_tap &kp LEFT>                
            , <&macro_release &kp LCTRL &kp LALT>                
            ;        
        };
        move_desktop_right: move_desktop_right {            
            label = "move_desktop_right";            
            compatible = "zmk,behavior-macro";            
            #binding-cells = <0>;            
            bindings                
            = <&macro_press &kp LCTRL &kp LALT>                
            , <&macro_tap &kp RIGHT>                
            , <&macro_release &kp LCTRL &kp LALT>                
            ;        
        };
    };
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
                &kp ESC    &kp N1    &kp N2    &kp N3     &kp N4    &kp N5            &kp N6       &kp N7     &kp N8      &kp N9    &kp N0    &kp MINUS  &kp EQUAL  &kp BSPC
                &kp TAB    &kp Q     &kp W     &kp E      &kp R     &kp T             &kp Y        &kp U      &kp I       &kp O     &kp P     &kp LBKT   &kp RBKT  &kp BSLH
                &mo ADV      &kp A     &kp S     &kp D      &kp F     &kp G             &kp H        &kp J      &kp K       &kp L     &kp SEMI  &kp SQT    &kp RET
                &kp LSHFT  &kp Z     &kp X     &kp C      &kp V     &kp B             &kp N        &kp M      &kp COMMA   &kp DOT   &kp FSLH  &kp RSHFT
                &kp LCTRL  &kp LGUI  &kp LALT                              &kp SPACE               &kp RALT               &kp RGUI  &mo FN     &kp RCTRL  &bt BT_CLR
            >;
        };

        advanced {
            bindings = <
                &kp GRAVE   &kp F1        &kp F2        &kp F3       &kp F4       &kp F5            &kp F6  &kp F7      &kp F8    &kp F9   &kp F10     &kp F11        &kp F12  &kp DEL
                &trans      &kp HOME      &kp UP        &kp END      &trans       &trans            &trans  &trans      &kp INS   &trans   &kp PSCRN   &kp SLCK       &kp PAUSE_BREAK   &reset
                &trans      &kp LEFT      &kp DOWN      &kp RIGHT    &trans       &trans            &trans  &trans      &trans    &trans   &kp HOME    &kp PG_UP      &bootloader
                &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE   &trans       &bootloader       &trans  &trans      &trans    &kp END  &kp PG_DN   &kp C_NEXT
                &bt BT_PRV   &bt BT_NXT    &trans        &trans       &trans       &trans            &trans  &bt BT_CLR   &trans
            >;
        };
        function {
            bindings = <
                &trans      &trans              &trans    &trans                &trans       &trans            &trans  &trans       &trans   &trans   &trans     &trans  &trans  &trans
                &trans      &trans              &trans    &trans                &trans       &trans            &trans  &trans       &trans   &trans   &trans     &trans    &trans   &reset
                &trans      &move_desktop_left  &trans    &move_desktop_right   &trans       &trans            &trans  &trans       &trans   &trans   &trans     &trans    &trans
                &trans      &trans              &trans    &trans                &trans       &trans            &trans  &trans       &trans   &trans   &trans     &trans
                &bt BT_PRV  &bt BT_NXT          &trans    &trans                &trans       &trans            &trans  &bt BT_CLR   &trans
            >;
        };

    };
};
